Vemco_Dep<-dbReadTable(con, "VemcoReceiverDeployments")
Vemco_Dep2<-subset(Vemco_Dep, select = c("GPSname", "VemcoSN", "StartTime", "EndTime"))
Vemco_Dep2$StartDate<-as.Date(Vemco_Dep2$StartTime, format = "%Y-%m-%d")
Vemco_Dep2$EndDate<-as.Date(Vemco_Dep2$EndTime, format = "%Y-%m-%d")
#Remove all 999 GPS name recievers
Vemco_Dep2<-Vemco_Dep2[which(Vemco_Dep2$GPSname!=999),]
######################################Edit below to change range of dates
#Get vemco deployments in range we're interested in
start<-Vemco_Dep2[Vemco_Dep2$StartDate >= begindate,]
start2<-start[start$StartTime <= enddate,]
end<-na.omit(Vemco_Dep2[which(Vemco_Dep2$EndTime >= begindate),])
end2<-end[end$EndTime <= enddate,]
#Add in active receivers not started in this quarter and remove 'active' receivers from previous year
a<-Vemco_Dep2[is.na(Vemco_Dep2$EndTime),]
end3<-rbind(end2,a)
end4<-end3[end3$StartTime >= begindate,]
#Make sure GPS names match
Vemco_Dep3<-unique(rbind(start2, end4))
test2<- left_join(Vemco_Dep3, Rec_Loc, by="GPSname")
vemco_missing_GENLOC<- which(is.na(test2$GeneralLocation), arr.ind=TRUE)
###Add location to Vemco Receivers
#bring in site name and rkm data
vloc<-subset(Rec_Loc, select = c("GeneralLocation", "Genrkm", "GPSname", "GenLat", "GenLon"))
Vemco_Dep4<-merge(vloc,Vemco_Dep3, all.y = TRUE)
#Order table by start time
Vemco_Dep4<-Vemco_Dep4[order(as.Date(Vemco_Dep4$StartTime, format="%d-%m-%Y")),]
Vemco_Dep5<-Vemco_Dep4[,c("GPSname","GenLat", "GenLon", "Genrkm","VemcoSN",
"StartTime","EndTime")] %>%
dplyr::rename("Lat" = "GenLat") %>%
dplyr::rename("Lon" = "GenLon") %>%
dplyr::rename("rkm" = "Genrkm")
#remove row numbers
rownames(Vemco_Dep5) <- c()
#pipe data to table and give caption
VemDep5<- Vemco_Dep5%>%
flextable() %>%
set_caption(caption = "Table 3. Vemco receivers active, deployed, or retrieved during this report period") %>%
font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 11, part = "body") %>%
width(width = .75)
#set table style
VemDep5<- theme_zebra(VemDep5, odd_header="#4472c4", odd_body ="#d9e2f3", even_header="transparent", even_body="transparent")
VemDep5<- border_outer(VemDep5, part="all", border= bord)
VemDep5<- border_inner(VemDep5, part="body", border=bord)
VemDep5<- align(VemDep5, align = "center", part = "all")
#print table
VemDep5
## download the tagged fish data set
library(plyr)
TaggedFish<- tbl(con, "TaggedFish") %>%
collect()
# select tagged fish beginning with report period
tag <- TaggedFish %>%
mutate(DateTagged = as.POSIXct(DateTagged)) %>% #Format datetime
mutate(Rel_datetime = as.POSIXct(Rel_datetime)) %>% #Format datetime
dplyr::filter(DateTagged >= begindate)
#Summary table of studies and release dates
s<-unique(tag[,c("StudyID","DateTagged")])
study<- paste("Seasonal_Survival_", WY, sep = "")
#Select studies to look at
tagss<-tag[which(tag$StudyID==study),]
s1<-s[which(s$StudyID==study),]
#cleanup date for week vars
s1$DateTagged<- gsub("16:00:00", "",s1$DateTagged)
s1<-  arrange(s1, DateTagged)
wk1<- paste(str_trim(s1[1,2]))
wk2<- paste(str_trim(s1[3,2]))
wk3<- paste(str_trim(s1[5,2]))
#collect day vars
s2<-unique(tagss[,c("StudyID","Fish_Type","Raceway", "Rel_loc","DateTagged","Rel_datetime")])
#add fish number to count fish
tagss$fish_number<-1
#Create summary table
SStag_table<- plyr::ddply(tagss, .(Raceway, DateTagged), summarise, count=sum(fish_number),
meanW=mean(Weight), meanL=mean(Length),
SD_W=sd(Weight), SD_L=sd(Length), min_W=min(Weight), min_L=min(Length),
max_W=max(Weight), max_L=max(Length))
#Set decimal place to 2
SStag4<-as.data.frame(lapply(SStag_table[sapply(SStag_table, is.numeric)], round, 2))
#Add back in rel datetime row
SStag4$DateTagged<-SStag_table$DateTagged
SStag5<-merge(SStag4,s2)
SStag5<-SStag5[order(SStag5$Rel_datetime),]
#Reduced table for report
SStag6<-SStag5[,c("StudyID", "Fish_Type", "Rel_loc", "Raceway", "count", "Rel_datetime", "meanW", "meanL")]
names(SStag6)[names(SStag6)=="Rel_loc"]<-"Release Loc"
names(SStag6)[names(SStag6)=="count"]<-"Count"
names(SStag6)[names(SStag6)=="Rel_datetime"]<-"Release Date"
names(SStag6)[names(SStag6)=="meanW"]<-"Avg Weight"
names(SStag6)[names(SStag6)=="meanL"]<-"Avg Length"
names(SStag6)[names(SStag6)=="Fish_Type"]<-"Fish Type"
sstotal<- sum(SStag6$Count)
#pipe data to table and give caption
SStag6<- SStag6%>%
flextable() %>%
set_caption(caption = "Table 4. Hatchery Chinook acoustic tagged during this report period.") %>%
font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 11, part = "body") %>%
width(width = .75)
#set table style
SStag6<- theme_zebra(SStag6, odd_header="#4472c4", odd_body ="#d9e2f3", even_header="transparent", even_body="transparent")
SStag6<- border_outer(SStag6, part="all", border= bord)
SStag6<- border_inner(SStag6, part="body", border=bord)
SStag6<- align(SStag6, align = "center", part = "all")
#print table
SStag6
study<- paste("Steelhead_", WY, sep = "")
#Select studies to look at
tagst<-tag[which(tag$StudyID==study),]
tentdat<- read.csv("/Volumes/JRFREYKEYS/Tagged_Fish_Metadata.csv")
tentdat<- read.csv("/Volumes/JRFREYKEYS/Tagged_Fish_Metadata.csv")
View(tentdat)
s1<-s[which(s$StudyID==study),]
#cleanup date for week vars
#s1$DateTagged<- gsub("16:00:00", "",s1$DateTagged)
s1 %>%
mutate(date = as.Date(s1$DateTagged, format="%m/%d/%y"))
study<- paste("Seasonal_Survival_", WY, sep = "")
#Select studies to look at
tagss<-tag[which(tag$StudyID==study),]
s1<-s[which(s$StudyID==study),]
#cleanup date for week vars
#s1$DateTagged<- gsub("16:00:00", "",s1$DateTagged)
s1 %>%
mutate(date = as.Date(s1$DateTagged, format="%m/%d/%y"))
s1<-  arrange(s1, DateTagged)
View(s1)
s1<-s[which(s$StudyID==study),]
#cleanup date for week vars
#s1$DateTagged<- gsub("16:00:00", "",s1$DateTagged)
s1 %>%
gsub("16:00:00", "",s1$DateTagged) %>%
mutate(date = as.Date(s1$DateTagged, format="%m/%d/%y"))
s1<-s[which(s$StudyID==study),]
#cleanup date for week vars
s1$DateTagged<- gsub("16:00:00", "",s1$DateTagged)
s1 %>%
mutate(date = as.Date(s1$DateTagged, format="%m/%d/%y"))
s1<-  arrange(s1, DateTagged)
wk1<- paste(str_trim(s1[1,2]))
wk2<- paste(str_trim(s1[3,2]))
wk3<- paste(str_trim(s1[5,2]))
s1<-s[which(s$StudyID==study),]
#cleanup date for week vars
s1$DateTagged<- gsub(" 16:00:00", "",s1$DateTagged)
s1 %>%
mutate(date = as.Date(s1$DateTagged, format="%m/%d/%y"))
s1<-  arrange(s1, DateTagged)
wk1<- paste(str_trim(s1[1,2]))
wk2<- paste(str_trim(s1[3,2]))
wk3<- paste(str_trim(s1[5,2]))
startup<- read.csv("~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2/Tag_Life/StartUpSpecSheets/tag_life_tags.csv") #got lazy and made one sheet with RR varnames
View(startup)
#Select studies to look at
tagss<-tag[which(tag$StudyID==study),]
s1<-s[which(s$StudyID==study),]
View(s1)
s1 %>%
mutate(DateTagged = as.Date(s1$DateTagged, format="%m/%d/%y"))
s1<-  arrange(s1, DateTagged)
wk1<- paste(str_trim(s1[1,2]))
wk2<- paste(str_trim(s1[3,2]))
s1 %>%
mutate(DateTagged = as.Date(s1$DateTagged, format="%Y%M%D HH:MM:SS"))
View(s1)
s1 %>%
mutate(DateTagged = as.Date(s1$DateTagged, format="%Y%M%D HH:MM:SS")) %>%
mdy(DateTagged)
study<- paste("Seasonal_Survival_", WY, sep = "")
#Select studies to look at
tagss<-tag[which(tag$StudyID==study),]
s1<-s[which(s$StudyID==study),]
#cleanup date for week vars
s1$DateTagged<- gsub(" 16:00:00", "",s1$DateTagged)
s1 %>%
mdy(DateTagged)
s1 %>%
mdy(s1$DateTagged)
#cleanup date for week vars
s1$DateTagged<- gsub(" 16:00:00", "",s1$DateTagged)
s1 %>%
mdy(as.Date(s1$DateTagged))
s1 %>%
as.Date(s1$DateTagged)
s1$DateTagged<- as.Date(s1$DateTagged)
s1$DateTagged<- mdy(s1$DateTagged)
s1<-  arrange(s1, DateTagged)
wk1<- paste(str_trim(s1[1,2]))
#Select studies to look at
tagss<-tag[which(tag$StudyID==study),]
s1<-s[which(s$StudyID==study),]
#cleanup date for week vars
s1$DateTagged<- gsub(" 16:00:00", "",s1$DateTagged)
s1$DateTagged<- as.Date(s1$DateTagged)
s1<-  arrange(s1, DateTagged)
wk1<- paste(str_trim(s1[1,2]))
wk2<- paste(str_trim(s1[3,2]))
wk3<- paste(str_trim(s1[5,2]))
#Select studies to look at
tagss<-tag[which(tag$StudyID==study),]
s1<-s[which(s$StudyID==study),]
#cleanup date for week vars
s1$DateTagged<- gsub(" 16:00:00", "",s1$DateTagged)
s1$DateTagged<- as.Date(s1$DateTagged)
s1<-  arrange(s1, DateTagged)
wk1<- paste(str_trim(s1[1,2]))
#Select studies to look at
tagss<-tag[which(tag$StudyID==study),]
s1<-s[which(s$StudyID==study),]
#cleanup date for week vars
s1$DateTagged<- gsub("16:00:00", "",s1$DateTagged)
s1<-  arrange(s1, DateTagged)
wk1<- paste(str_trim(s1[1,2]))
wk2<- paste(str_trim(s1[3,2]))
wk3<- paste(str_trim(s1[5,2]))
#collect day vars
s2<-unique(tagss[,c("StudyID","Fish_Type","Raceway", "Rel_loc","DateTagged","Rel_datetime")])
## download the tag effects fish data set
library(plyr)
TE_start<- tbl(con, "Tag_Effects_Metadata") %>%
collect()
#format colnames
TE_start<- TE_start %>%
subset(select=c("TagID_Hex","DateTagged","Weight","Length","StudyID")) %>%
dplyr::rename("Tag.ID" = "TagID_Hex")
View(TE_start)
## download the tag effects fish data set
library(plyr)
TE_start<- tbl(con, "Tag_Effects_Metadata") %>%
collect()
#format colnames
TE_start<- TE_start %>%
subset(select=c("TagID_Hex","DateTagged","Weight","Length","StudyID")) %>%
dplyr::rename("Tag.ID" = "TagID_Hex")
##select studies in report WY
TE_start %>%
TE_start[which(TE_start$StudyID=".*24"),]
##select studies in report WY
TE_start %>%
TE_start[which(TE_start$StudyID = ".*22"),]
##format dates
TE_start$DateTagged<-as.Date(TE_start$DateTagged, format = "%m/%d/%Y")
##select studies in report WY
TE_start<- subset(TE_start, grepl(".*22", TE_start$StudyID))
View(s)
install.packages("RODBC")
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
# load data access packages
library(odbc) #Read in Access database off of SQL server
library(RODBC) #Read in Access database from local file
#library(openssl)
library(dataRetrieval)
library(rerddap)
library(dbplyr)
library(DBI) #R database management
#load data manip packages
library(tidyverse)
library(data.table)
library(grid)
library(fs)
library(lubridate)
#load report generation packages
#install.packages(rmarkdown)
library(shiny)
library(rmarkdown) #generate word report
#install.packages(knitr)
library(knitr) #generate word report
#install.packages(flextable)
library(flextable) #format tables
#install.packages("officer") #format tables
library(officer)
library(grid)
library(ggplot2)
library(plotly)
#set border style first time
bord = fp_border(color="#9bb4df", width=1)
#store and format date params
begindatechar<- params$begindate
begindate<- lubridate::mdy(params$begindate)
beginmo<- str_extract(begindatechar, "^.*(?=[[:punct:]])")
enddatechar<- params$enddate
enddate<- mdy(params$enddate)
endmo<- str_extract(enddatechar, "^.*(?=[[:punct:]])")
WY<- str_extract(params$enddate, "\\d{4}")
study<- paste("Steelhead_", WY, sep = "")
tentdat1<- odbcConnectAccess2007("/Users/jessefrey/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2/SJ_Steelhead_2024/Week1/Tagging_SJ_Steelhead_2024_wk1_CL.accdb")   #specifies the file path
detach("package:RODBC", unload = TRUE)
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
# load data access packages
library(odbc) #Read in Access database off of SQL server
#library(openssl)
library(dataRetrieval)
library(rerddap)
library(dbplyr)
library(DBI) #R database management
#load data manip packages
library(tidyverse)
library(data.table)
library(grid)
library(fs)
library(lubridate)
#load report generation packages
#install.packages(rmarkdown)
library(shiny)
library(rmarkdown) #generate word report
#install.packages(knitr)
library(knitr) #generate word report
#install.packages(flextable)
library(flextable) #format tables
#install.packages("officer") #format tables
library(officer)
library(grid)
library(ggplot2)
library(plotly)
#set border style first time
bord = fp_border(color="#9bb4df", width=1)
#store and format date params
begindatechar<- params$begindate
begindate<- lubridate::mdy(params$begindate)
beginmo<- str_extract(begindatechar, "^.*(?=[[:punct:]])")
enddatechar<- params$enddate
enddate<- mdy(params$enddate)
endmo<- str_extract(enddatechar, "^.*(?=[[:punct:]])")
WY<- str_extract(params$enddate, "\\d{4}")
tentdat<- "/Users/jessefrey/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2/SJ_Steelhead_2024/Week1/Tagging_SJ_Steelhead_2024_wk1_CL.accdb"
db<- odbcConnectAccess2007(tentdat)
library(RODBC)
db<- odbcConnectAccess2007(tentdat)
db<- odbcConnect(tentdat)
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
# load data access packages
library(odbc) #Read in Access database off of SQL server
#library(openssl)
library(dataRetrieval)
library(rerddap)
library(dbplyr)
library(DBI) #R database management
#load data manip packages
library(tidyverse)
library(data.table)
library(grid)
library(fs)
library(lubridate)
#load report generation packages
#install.packages(rmarkdown)
library(shiny)
library(rmarkdown) #generate word report
#install.packages(knitr)
library(knitr) #generate word report
#install.packages(flextable)
library(flextable) #format tables
#install.packages("officer") #format tables
library(officer)
library(grid)
library(ggplot2)
library(plotly)
#set border style first time
bord = fp_border(color="#9bb4df", width=1)
set_flextable_defaults(fonts_ignore=TRUE)
#store and format date params
begindatechar<- params$begindate
begindate<- lubridate::mdy(params$begindate)
beginmo<- str_extract(begindatechar, "^.*(?=[[:punct:]])")
enddatechar<- params$enddate
enddate<- mdy(params$enddate)
endmo<- str_extract(enddatechar, "^.*(?=[[:punct:]])")
WY<- str_extract(params$enddate, "\\d{4}")
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
devtools::source_gist("c83e078bf8c81b035e32c3fc0cf04ee8",
filename = 'render_toc.R')
# load data access packages
library(odbc) #Read in Access database off of SQL server
#library(openssl)
library(dataRetrieval)
library(rerddap)
library(dbplyr)
library(DBI) #R database management
#load data manip packages
library(tidyverse)
library(data.table)
library(grid)
library(fs)
library(lubridate)
#load report generation packages
#install.packages(rmarkdown)
library(shiny)
library(rmarkdown) #generate word report
#install.packages(knitr)
library(knitr) #generate word report
#install.packages(flextable)
library(flextable) #format tables
#install.packages("officer") #format tables
library(officer)
library(grid)
library(ggplot2)
library(plotly)
#set border style first time
bord = fp_border(color="#9bb4df", width=1)
set_flextable_defaults(fonts_ignore=TRUE)
#store and format date params
begindatechar<- params$begindate
begindate<- lubridate::mdy(params$begindate)
beginmo<- str_extract(begindatechar, "^.*(?=[[:punct:]])")
enddatechar<- params$enddate
enddate<- mdy(params$enddate)
endmo<- str_extract(enddatechar, "^.*(?=[[:punct:]])")
WY<- str_extract(params$enddate, "\\d{4}")
render_toc("blogdown-toc-example.Rmd")
render_toc("SemiAnnReport2024Q1-2.Rmd")
install.packages("officedown")
install.packages("officedown")
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
#fork a table of contents format, since word is not latex compatable
devtools::source_gist("c83e078bf8c81b035e32c3fc0cf04ee8",
filename = 'render_toc.R')
# load data access packages
library(odbc) #Read in Access database off of SQL server
#library(openssl)
library(dataRetrieval)
library(rerddap)
library(dbplyr)
library(DBI) #R database management
#load data manip packages
library(tidyverse)
library(data.table)
library(grid)
library(fs)
library(lubridate)
#load report generation packages
#install.packages(rmarkdown)
library(shiny)
library(rmarkdown) #generate word report
#install.packages(knitr)
library(knitr) #generate word report
#install.packages(flextable)
library(flextable) #format tables
#install.packages("officer") #format tables
library(officer)
install.packages("officedown")
library(officedown)
library(grid)
library(ggplot2)
library(plotly)
#set border style first time
bord = fp_border(color="#9bb4df", width=1)
set_flextable_defaults(fonts_ignore=TRUE)
#store and format date params
begindatechar<- params$begindate
begindate<- lubridate::mdy(params$begindate)
beginmo<- str_extract(begindatechar, "^.*(?=[[:punct:]])")
enddatechar<- params$enddate
enddate<- mdy(params$enddate)
endmo<- str_extract(enddatechar, "^.*(?=[[:punct:]])")
WY<- str_extract(params$enddate, "\\d{4}")
render_toc("SemiAnnReport2024Q1-2.Rmd", toc_header_name = "Table of Contents")
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
#fork a table of contents format, since word is not latex compatable
devtools::source_gist("c83e078bf8c81b035e32c3fc0cf04ee8",
filename = 'render_toc.R')
# load data access packages
library(odbc) #Read in Access database off of SQL server
#library(openssl)
library(dataRetrieval)
library(rerddap)
library(dbplyr)
library(DBI) #R database management
#load data manip packages
library(tidyverse)
library(data.table)
library(grid)
library(fs)
library(lubridate)
#load report generation packages
#install.packages(rmarkdown)
library(shiny)
library(rmarkdown) #generate word report
#install.packages(knitr)
library(knitr) #generate word report
#install.packages(flextable)
library(flextable) #format tables
#install.packages("officer") #format tables
library(officer)
#install.packages("officedown")
library(officedown)
library(grid)
library(ggplot2)
library(plotly)
#set border style first time
bord = fp_border(color="#9bb4df", width=1)
set_flextable_defaults(fonts_ignore=TRUE)
#store and format date params
begindatechar<- params$begindate
begindate<- lubridate::mdy(params$begindate)
beginmo<- str_extract(begindatechar, "^.*(?=[[:punct:]])")
enddatechar<- params$enddate
enddate<- mdy(params$enddate)
endmo<- str_extract(enddatechar, "^.*(?=[[:punct:]])")
WY<- str_extract(params$enddate, "\\d{4}")
]dir <- system.file(package = "officedown", "examples", "bookdown")
dir <- system.file(package = "officedown", "examples", "bookdown")
file.copy(dir, getwd(), recursive = TRUE, overwrite = TRUE)
fs::dir_tree("bookdown", recurse = TRUE)
rmarkdown::render_site("bookdown")
\newpage
fs::dir_tree("bookdown", recurse = TRUE)
render_site("bookdown")
