names(tag6)[names(tag6)=="meanW"]<-"Avg Weight"
names(tag6)[names(tag6)=="meanL"]<-"Avg Length"
names(tag6)[names(tag6)=="Fish_Type"]<-"Fish Type"
buttetotal<- sum(tag6$Count)
#pipe data to table and give caption
tag6<- tag6%>%
flextable() %>%
set_caption(caption = "Table 5. Wild Chinook acoustic tagged during this report period.") %>%
font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 11, part = "body") %>%
width(width = .75)
#set table style
tag6<- theme_zebra(tag6, odd_header="#4472c4", odd_body ="#d9e2f3", even_header="transparent", even_body="transparent")
tag6<- border_outer(tag6, part="all", border= bord)
tag6<- border_inner(tag6, part="body", border=bord)
tag6<- align(tag6, align = "center", part = "all")
#print table
tag6
###
#Edit below to change studies
###
#Select studies to look at
tagss<-tag[which(tag$StudyID=="Seasonal_Survival_2023"),]
s2<-unique(tagss[,c("StudyID","Fish_Type","Raceway", "Rel_loc","DateTagged","Rel_datetime")])
tagss$fish_number<-1
#Create summary table
tag_table<- plyr::ddply(tagss, .(Raceway, DateTagged), summarise, count=sum(fish_number), meanW=mean(Weight), meanL=mean(Length),
SD_W=sd(Weight), SD_L=sd(Length), min_W=min(Weight), min_L=min(Length),
max_W=max(Weight), max_L=max(Length))
#Set decimal place to 2
tag4<-as.data.frame(lapply(tag_table[sapply(tag_table, is.numeric)], round, 2))
#Add back in rel datetime row
tag4$DateTagged<-tag_table$DateTagged
tag5<-merge(tag4,s2)
tag5<-tag5[order(tag5$Rel_datetime),]
#Reduced table for report
tag6<-tag5[,c("StudyID", "Fish_Type", "Rel_loc", "Raceway", "count", "Rel_datetime", "meanW", "meanL")]
names(tag6)[names(tag6)=="Rel_loc"]<-"Release Loc"
names(tag6)[names(tag6)=="count"]<-"Count"
names(tag6)[names(tag6)=="Rel_datetime"]<-"Release Date"
names(tag6)[names(tag6)=="meanW"]<-"Avg Weight"
names(tag6)[names(tag6)=="meanL"]<-"Avg Length"
names(tag6)[names(tag6)=="Fish_Type"]<-"Fish Type"
sstotal<- sum(tag6$Count)
#pipe data to table and give caption
tag6<- tag6%>%
flextable() %>%
set_caption(caption = "Table 6. Hatchery fish acoustic tagged during this report period.") %>%
font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 11, part = "body") %>%
width(width = .75)
#set table style
tag6<- theme_zebra(tag6, odd_header="#4472c4", odd_body ="#d9e2f3", even_header="transparent", even_body="transparent")
tag6<- border_outer(tag6, part="all", border= bord)
tag6<- border_inner(tag6, part="body", border=bord)
tag6<- align(tag6, align = "center", part = "all")
#print table
tag6
###Run this code for SJ Steelhead studies
###Remove Raceway
tag7<-tag[which(tag$StudyID=="Stan_Steelhead_2023"),]
s3<-unique(tag7[,c("StudyID","Fish_Type", "Rel_loc")])
tag7$fish_number<-1
#Create summary table
tag_table<-plyr::ddply(tag7, .(Rel_loc), summarise, count=sum(fish_number), meanW=mean(Weight), meanL=mean(Length),
SD_W=sd(Weight), SD_L=sd(Length), min_W=min(Weight), min_L=min(Length),
max_W=max(Weight), max_L=max(Length))
#Set decimal place to 2
tag8<-as.data.frame(lapply(tag_table[sapply(tag_table, is.numeric)], round, 2))
#Add back in rel datetime row
tag8$Rel_loc<-tag_table$Rel_loc
tag9<-merge(tag8,s3)
#Reduced table for report
tag10<-tag9[,c("Rel_loc","StudyID", "Fish_Type", "count", "meanW", "meanL")]
names(tag10)[names(tag10)=="Rel_loc"]<-"Release Loc"
names(tag10)[names(tag10)=="Rel_loc"]<-"Release Loc"
names(tag10)[names(tag10)=="count"]<-"Count"
names(tag10)[names(tag10)=="Rel_datetime"]<-"Release Date"
names(tag10)[names(tag10)=="meanW"]<-"Avg Weight"
names(tag10)[names(tag10)=="meanL"]<-"Avg Length"
names(tag10)[names(tag10)=="Fish_Type"]<-"Fish Type"
#pipe data into table and give caption
tag10<- tag10%>%
flextable() %>%
set_caption(caption = "Table 7. Wild Steelhead acoustic tagged during this study period") %>%
font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 11, part = "body") %>%
width(width = .75)
#set table style
tag10<- theme_zebra(tag10, odd_header="#4472c4", odd_body ="#d9e2f3", even_header="transparent", even_body="transparent")
tag10<- border_outer(tag10, part="all", border= bord)
tag10<- border_inner(tag10, part="body", border=bord)
tag10<- align(tag10, align = "center", part = "all")
#print table
tag10
##format pit tags
options(scipen = 999)
#read in data from date tagged
SS_start<-read.csv("/Volumes/JRFREY_NOAA/SemiAnnReport/BORSemiAnnualReportQ3Q4/SP_2023_Tag_Effects_Start.csv", header=TRUE)
#read in data from date dissection
SS_end<-read.csv("/Volumes/JRFREY_NOAA/SemiAnnReport/BORSemiAnnualReportQ3Q4/SP_2023_Tag\ Effects_End.csv", header=TRUE)
#read in tag shed date
SS_shed<- read.csv("/Volumes/JRFREY_NOAA/SemiAnnReport/BORSemiAnnualReportQ3Q4/Tag_Effects_Shed_Mort_List.csv", header = T)
#format colnames
SS_start2<- SS_start %>%
subset(select=c("TagID_Hex","DateTagged","Weight","Length"))
View(SS_start)
SS_start2<- rename(SS_start2,"TagID_Hex" = "Tag.ID")
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
knitr::opts_knit$set(root.dir = '/Users/jessefrey/Desktop/BORSemiAnnualReportQ3Q4/')
# load data access packages
library(odbc) #Read in Access database off of SQL server
library(dataRetrieval)
library(rerddap)
library(dbplyr)
library(DBI) #R database management
#load data manip packages
library(data.table)
library(tidyverse)
library(fs)
library(lubridate)
#load report generation packages
#install.packages(rmarkdown)
library(shiny)
library(rmarkdown) #generate word report
#install.packages(knitr)
library(knitr) #generate word report
#install.packages(flextable)
library(flextable) #format tables
#install.packages("officer") #format tables
library(officer)
#set border style first time
bord = fp_border(color="#9bb4df", width=1)
#store and format date params
begindatechar<- params$begindate
begindate<- lubridate::mdy(params$begindate)
enddatechar<- params$enddate
enddate<- mdy(params$enddate)
startup <-list.files(path = "/Desktop/BORSemiAnnualReportQ3Q4", pattern = "*.csv") %>%
map_df(~read_csv(.))
###
startup<- startup[,-1]
startup <-list.files(path = "~/Desktop/Tag_Life", pattern = "*.csv") %>%
map_df(~read_csv(.))
startup <-list.files(path = "~/Desktop/Tag_Life/", pattern = "*.csv") %>%
map_df(~read_csv(.))
startup <-list.files(path = "~/Desktop/Tag_Life/StartUpSpecSheets", pattern = "*.csv") %>%
map_df(~read_csv(.))
startup <-list.files(path = "~/Desktop/Tag_Life/StartUpSpecSheets/", pattern = "*.csv") %>%
map_df(~read_csv(.))
###Read in startup files
knitr::opts_knit$set(root.dir = '/Volumes/JRFREY_NOAA/SemiAnnReport/BORSemiAnnualReportQ3Q4/Tag_Life')
getwd()
startup <-list.files(path = "~/Desktop/Tag_Life/StartUpSpecSheets/", pattern = "*.csv") %>%
map_df(~read_csv(.))
###
startup<- startup[,-1]
library(tidyverse)
library(rerddap)
library(lubridate)
library(dbplyr)
library(odbc) #Read in Access database off of SQL server
# We need to provide a fresh vemco deployment csv re: line 125 in app.R
con <- dbConnect(odbc(),
Driver = "ODBC Driver 17 for SQL Server",
Server = "calfishtrack-server.database.windows.net",
Database = "JSATS_Database",
UID = "jsats_user",
PWD = "Pass@123",
Port = 1433)
# We need to provide a fresh vemco deployment csv re: line 125 in app.R
con <- dbConnect(odbc(),
Driver = "ODBC Driver 17 for SQL Server",
Server = "calfishtrack-server.database.windows.net",
Database = "JSATS_Database",
UID = "jsats_user",
PWD = "Pass@123",
Port = 1433)
View(Rec_Dep5)
# Read in JSATS simple filter txts
setwd("/Volumes/JRFREY_NOAA/TagLifeTank/2024TLDetects")
getwd()
library(tidyverse)
library(dplyr)
library(data.table)
library(lubridate)
TL_files <- list.files(path = "/Volumes/JRFREY_NOAA/TagLifeTank/2024TLDetects", recursive = TRUE,
pattern = ".TXT",
full.names = TRUE)
# Read in JSATS simple filter txts
setwd("~/Desktop/2024TLDetects")
TL_files <- list.files(path = "~/Desktop/2024TLDetects", recursive = TRUE,
pattern = ".TXT",
full.names = TRUE)
TL_files <- list.files(path = "~/Desktop/2024TLDetects", recursive = TRUE,
pattern = ".TXT",
full.names = TRUE)
lake1<- read.csv("/Volumes/JRFREY_NOAA/TagLifeTank/2024BatteryLife/week1-2.csv", header = T)
View(lake1)
View(lake1)
git cloen https://github.com/stochastic-sleuth/calfishtrack-shiny
git clone https://github.com/stochastic-sleuth/calfishtrack-shiny
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
# load data access packages
library(odbc) #Read in Access database off of SQL server
library(dataRetrieval)
library(rerddap)
library(dbplyr)
library(DBI) #R database management
#load data manip packages
library(tidyverse)
library(data.table)
library(grid)
library(fs)
library(lubridate)
#load report generation packages
#install.packages(rmarkdown)
library(shiny)
library(rmarkdown) #generate word report
#install.packages(knitr)
library(knitr) #generate word report
#install.packages(flextable)
library(flextable) #format tables
#install.packages("officer") #format tables
library(officer)
library(grid)
library(ggplot2)
library(plotly)
#set border style first time
bord = fp_border(color="#9bb4df", width=1)
#store and format date params
begindatechar<- params$begindate
begindate<- lubridate::mdy(params$begindate)
beginmo<- str_extract(begindatechar, "^.*(?=[[:punct:]])")
enddatechar<- params$enddate
enddate<- mdy(params$enddate)
endmo<- str_extract(enddatechar, "^.*(?=[[:punct:]])")
WY<- str_extract(params$enddate, "\\d{4}")
##Table 1. Location of real-time JSATS receivers with the date first operational in real-time
con <- dbConnect(odbc(),
Driver = "ODBC Driver 17 for SQL Server",
Server = "calfishtrack-server.database.windows.net",
Database = "JSATS_Database",
UID = "jsats_user",
PWD = "Pass@123",
Port = 1433)
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
# load data access packages
library(odbc) #Read in Access database off of SQL server
library(openssl)
library(dataRetrieval)
library(rerddap)
library(dbplyr)
library(DBI) #R database management
#load data manip packages
library(tidyverse)
library(data.table)
library(grid)
library(fs)
library(lubridate)
#load report generation packages
#install.packages(rmarkdown)
library(shiny)
library(rmarkdown) #generate word report
#install.packages(knitr)
library(knitr) #generate word report
#install.packages(flextable)
library(flextable) #format tables
#install.packages("officer") #format tables
library(officer)
library(grid)
library(ggplot2)
library(plotly)
#set border style first time
bord = fp_border(color="#9bb4df", width=1)
#store and format date params
begindatechar<- params$begindate
begindate<- lubridate::mdy(params$begindate)
beginmo<- str_extract(begindatechar, "^.*(?=[[:punct:]])")
enddatechar<- params$enddate
enddate<- mdy(params$enddate)
endmo<- str_extract(enddatechar, "^.*(?=[[:punct:]])")
WY<- str_extract(params$enddate, "\\d{4}")
##Table 1. Location of real-time JSATS receivers with the date first operational in real-time
con <- DBI::dbConnect(odbc::odbc(),
Driver = "ODBC Driver 17 for SQL Server",
Server = "calfishtrack-server.database.windows.net",
Database = "JSATS_Database",
UID = "jsats_user",
PWD = "Pass@123",
Port = 1433)
##Table 1. Location of real-time JSATS receivers with the date first operational in real-time
con <- DBI::dbConnect(odbc::odbc(),
Driver = "ODBC Driver 17 for SQL Server",
Server = "calfishtrack-server.database.windows.net",
Database = "JSATS_Database",
UID = "jsats_user",
PWD = "Pass@123")
install.packages(c("DBI", "markdown", "odbc", "rerddap"))
install.packages(c("DBI", "markdown", "odbc", "rerddap"))
install.packages(c("DBI", "markdown", "odbc", "rerddap"))
install.packages(c("DBI", "markdown", "odbc", "rerddap"))
install.packages(c("DBI", "markdown", "odbc", "rerddap"))
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
# load data access packages
library(odbc) #Read in Access database off of SQL server
library(openssl)
library(dataRetrieval)
library(rerddap)
library(dbplyr)
library(DBI) #R database management
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
# load data access packages
library(odbc) #Read in Access database off of SQL server
library(openssl)
library(dataRetrieval)
library(rerddap)
library(dbplyr)
#library(DBI) #R database management
#load data manip packages
library(tidyverse)
library(data.table)
library(grid)
library(fs)
library(lubridate)
#load report generation packages
#install.packages(rmarkdown)
library(shiny)
library(rmarkdown) #generate word report
#install.packages(knitr)
library(knitr) #generate word report
#install.packages(flextable)
library(flextable) #format tables
#install.packages("officer") #format tables
library(officer)
library(grid)
library(ggplot2)
library(plotly)
#set border style first time
bord = fp_border(color="#9bb4df", width=1)
#store and format date params
begindatechar<- params$begindate
begindate<- lubridate::mdy(params$begindate)
beginmo<- str_extract(begindatechar, "^.*(?=[[:punct:]])")
enddatechar<- params$enddate
enddate<- mdy(params$enddate)
endmo<- str_extract(enddatechar, "^.*(?=[[:punct:]])")
WY<- str_extract(params$enddate, "\\d{4}")
##Table 1. Location of real-time JSATS receivers with the date first operational in real-time
con <- DBI::dbConnect(odbc::odbc(),
Driver = "ODBC Driver 17 for SQL Server",
Server = "calfishtrack-server.database.windows.net",
Database = "JSATS_Database",
UID = "jsats_user",
PWD = "Pass@123")
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
# load data access packages
library(odbc) #Read in Access database off of SQL server
library(openssl)
library(dataRetrieval)
library(rerddap)
library(dbplyr)
library(DBI) #R database management
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
# load data access packages
library(odbc) #Read in Access database off of SQL server
library(openssl)
library(dataRetrieval)
library(rerddap)
library(dbplyr)
#library(DBI) #R database management
#load data manip packages
library(tidyverse)
library(data.table)
library(grid)
library(fs)
library(lubridate)
#load report generation packages
#install.packages(rmarkdown)
library(shiny)
library(rmarkdown) #generate word report
#install.packages(knitr)
library(knitr) #generate word report
#install.packages(flextable)
library(flextable) #format tables
#install.packages("officer") #format tables
library(officer)
library(grid)
library(ggplot2)
library(plotly)
#set border style first time
bord = fp_border(color="#9bb4df", width=1)
#store and format date params
begindatechar<- params$begindate
begindate<- lubridate::mdy(params$begindate)
beginmo<- str_extract(begindatechar, "^.*(?=[[:punct:]])")
enddatechar<- params$enddate
enddate<- mdy(params$enddate)
endmo<- str_extract(enddatechar, "^.*(?=[[:punct:]])")
WY<- str_extract(params$enddate, "\\d{4}")
##Table 1. Location of real-time JSATS receivers with the date first operational in real-time
con <- dbConnect(odbc::odbc(),
Driver = "ODBC Driver 17 for SQL Server",
Server = "calfishtrack-server.database.windows.net",
Database = "JSATS_Database",
UID = "jsats_user",
PWD = "Pass@123")
##Table 1. Location of real-time JSATS receivers with the date first operational in real-time
con <- dbConnect(odbc(),
Driver = "ODBC Driver 17 for SQL Server",
Server = "calfishtrack-server.database.windows.net",
Database = "JSATS_Database",
UID = "jsats_user",
PWD = "Pass@123")
library(DBI)
setwd("~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2")
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
# load data access packages
library(odbc) #Read in Access database off of SQL server
library(openssl)
library(dataRetrieval)
library(rerddap)
library(dbplyr)
library(DBI) #R database management
#load data manip packages
library(tidyverse)
library(data.table)
library(grid)
library(fs)
library(lubridate)
#load report generation packages
#install.packages(rmarkdown)
library(shiny)
library(rmarkdown) #generate word report
#install.packages(knitr)
library(knitr) #generate word report
#install.packages(flextable)
library(flextable) #format tables
#install.packages("officer") #format tables
library(officer)
library(grid)
library(ggplot2)
library(plotly)
#set border style first time
bord = fp_border(color="#9bb4df", width=1)
#store and format date params
begindatechar<- params$begindate
begindate<- lubridate::mdy(params$begindate)
beginmo<- str_extract(begindatechar, "^.*(?=[[:punct:]])")
enddatechar<- params$enddate
enddate<- mdy(params$enddate)
endmo<- str_extract(enddatechar, "^.*(?=[[:punct:]])")
WY<- str_extract(params$enddate, "\\d{4}")
##Table 1. Location of real-time JSATS receivers with the date first operational in real-time
con <- dbConnect(odbc(),
Driver = "ODBC Driver 17 for SQL Server",
Server = "calfishtrack-server.database.windows.net",
Database = "JSATS_Database",
UID = "jsats_user",
PWD = "Pass@123")
knitr::opts_knit$set(root.dir = '~/Desktop/BORSemiAnnualReport/BORSemiAnn2024Q1-2')
knitr::opts_chunk$set(echo = params$printcode, message = FALSE)
# load data access packages
library(odbc) #Read in Access database off of SQL server
#library(openssl)
library(dataRetrieval)
library(rerddap)
library(dbplyr)
library(DBI) #R database management
#load data manip packages
library(tidyverse)
library(data.table)
library(grid)
library(fs)
library(lubridate)
#load report generation packages
#install.packages(rmarkdown)
library(shiny)
library(rmarkdown) #generate word report
#install.packages(knitr)
library(knitr) #generate word report
#install.packages(flextable)
library(flextable) #format tables
#install.packages("officer") #format tables
library(officer)
library(grid)
library(ggplot2)
library(plotly)
#set border style first time
bord = fp_border(color="#9bb4df", width=1)
#store and format date params
begindatechar<- params$begindate
begindate<- lubridate::mdy(params$begindate)
beginmo<- str_extract(begindatechar, "^.*(?=[[:punct:]])")
enddatechar<- params$enddate
enddate<- mdy(params$enddate)
endmo<- str_extract(enddatechar, "^.*(?=[[:punct:]])")
WY<- str_extract(params$enddate, "\\d{4}")
##Table 1. Location of real-time JSATS receivers with the date first operational in real-time
con <- dbConnect(odbc(),
Driver = "ODBC Driver 17 for SQL Server",
Server = "calfishtrack-server.database.windows.net",
Database = "JSATS_Database",
UID = "jsats_user",
PWD = "Pass@123")
